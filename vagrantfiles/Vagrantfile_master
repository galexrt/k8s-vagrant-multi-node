Vagrant.configure('2') do |config|
    config.vm.box = $box_image
    config.vm.box_check_update = true

    config.vm.boot_timeout = 900

    config.vm.provider 'virtualbox' do |l|
        l.cpus = MASTER_CPUS
        l.memory = MASTER_MEMORY_SIZE_GB * 1024
    end

    config.vm.provider 'libvirt' do |lv|
        lv.cpus = MASTER_CPUS
        lv.memory = MASTER_MEMORY_SIZE_GB * 1024
    end

    config.vm.define 'master' do |subconfig|
        subconfig.vm.hostname = 'master'
        subconfig.vm.network :private_network, ip: MASTER_IP
        #subconfig.vm.provider :virtualbox do |vb|
        #    vb.customize ['modifyvm', :id, '--uartmode1', 'disconnected']
        #    # Network configuration
        #    vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
        #    # Storage configuration is done after provision in Makefile
        #    # This is because Vagrant is only once reading the Vagrantfile
        #end
        subconfig.vm.provider :libvirt do |lv|
            (1..DISK_COUNT.to_i).each do |diskID|
                lv.storage :file, :size => "#{DISK_SIZE_GB}G"
            end
        end
        subconfig.vm.synced_folder "data/#{BOX_OS}-master/", '/data', type: 'rsync',
            create: true, owner: 'root', group: 'root',
            rsync__args: ["--rsync-path='sudo rsync'", '--archive', '--delete', '-z']
        # Provision
        if $osPrepareScript != ""
            subconfig.vm.provision :shell, inline: $osPrepareScript
        end
        subconfig.vm.provision :shell, inline: $prepareScript
        subconfig.vm.provision :shell, inline: $baseInstallScript
        subconfig.vm.provision :shell, inline: $verifyNodeScript
        #subconfig.vm.provision :diskandreboot
        subconfig.vm.provision :shell, inline: $kubeMasterScript
        # Addons
        if K8S_DASHBOARD.to_s == 'true'
            subconfig.vm.provision :shell, inline: $kubeDashScript
            subconfig.vm.network 'forwarded_port', guest: 8443, host: 2443
        end
    end
end
